<?php

require_once __DIR__ . '/../vendor/autoload.php';

use Illuminate\Support\Facades\Schema;
use Illuminate\Support\Facades\DB;
use App\Models\PageSeo;
use Illuminate\Foundation\Application;

// Bootstrap Laravel
$app = Application::configure(basePath: dirname(__DIR__))
    ->withRouting(
        web: __DIR__ . '/../routes/web.php',
        api: __DIR__ . '/../routes/api.php',
        commands: __DIR__ . '/../routes/console.php',
        health: '/up',
    )
    ->withMiddleware(function ($middleware) {})
    ->withExceptions(function ($exceptions) {})
    ->create();

$app->make(\Illuminate\Contracts\Console\Kernel::class)->bootstrap();

echo "üìä PH√ÇN T√çCH B·∫¢NG PAGE_SEOS - MECHAMAP\n";
echo str_repeat("=", 70) . "\n\n";

// 1. C·∫•u tr√∫c b·∫£ng hi·ªán t·∫°i
echo "üèóÔ∏è C·∫§U TR√öC B·∫¢NG HI·ªÜN T·∫†I:\n";
echo str_repeat("-", 50) . "\n";

$columns = [
    // Core identification
    'id' => 'Primary key',
    'route_name' => 'T√™n route Laravel',
    'url_pattern' => 'Pattern URL (regex)',
    
    // Basic SEO (legacy)
    'title' => 'Ti√™u ƒë·ªÅ SEO (legacy)',
    'description' => 'M√¥ t·∫£ SEO (legacy)', 
    'keywords' => 'T·ª´ kh√≥a SEO (legacy)',
    
    // Multilingual SEO
    'title_i18n' => 'Ti√™u ƒë·ªÅ ƒëa ng√¥n ng·ªØ (JSON)',
    'description_i18n' => 'M√¥ t·∫£ ƒëa ng√¥n ng·ªØ (JSON)',
    'keywords_i18n' => 'T·ª´ kh√≥a ƒëa ng√¥n ng·ªØ (JSON)',
    
    // Open Graph
    'og_title' => 'OG Title (legacy)',
    'og_description' => 'OG Description (legacy)',
    'og_image' => 'OG Image URL',
    'og_title_i18n' => 'OG Title ƒëa ng√¥n ng·ªØ (JSON)',
    'og_description_i18n' => 'OG Description ƒëa ng√¥n ng·ªØ (JSON)',
    
    // Twitter Cards
    'twitter_title' => 'Twitter Title (legacy)',
    'twitter_description' => 'Twitter Description (legacy)',
    'twitter_image' => 'Twitter Image URL',
    'twitter_title_i18n' => 'Twitter Title ƒëa ng√¥n ng·ªØ (JSON)',
    'twitter_description_i18n' => 'Twitter Description ƒëa ng√¥n ng·ªØ (JSON)',
    
    // Technical SEO
    'canonical_url' => 'URL canonical',
    'no_index' => 'Ch·∫∑n index (boolean)',
    'extra_meta' => 'Meta tags b·ªï sung',
    
    // Management
    'is_active' => 'Tr·∫°ng th√°i ho·∫°t ƒë·ªông',
    'created_at' => 'Ng√†y t·∫°o',
    'updated_at' => 'Ng√†y c·∫≠p nh·∫≠t'
];

foreach ($columns as $column => $description) {
    echo sprintf("  %-25s %s\n", $column, $description);
}

// 2. Ph√¢n t√≠ch d·ªØ li·ªáu m·∫´u
echo "\nüìã PH√ÇN T√çCH D·ªÆ LI·ªÜU M·∫™U:\n";
echo str_repeat("-", 50) . "\n";

$samples = PageSeo::take(5)->get();
$totalRecords = PageSeo::count();

echo "T·ªïng s·ªë records: {$totalRecords}\n\n";

foreach ($samples as $index => $sample) {
    echo "üìÑ Record " . ($index + 1) . ":\n";
    echo "  Route: " . ($sample->route_name ?: 'N/A') . "\n";
    echo "  URL Pattern: " . ($sample->url_pattern ?: 'N/A') . "\n";
    echo "  Title (legacy): " . ($sample->title ?: 'N/A') . "\n";
    echo "  Title i18n: " . ($sample->title_i18n ? 'C√≥' : 'Kh√¥ng') . "\n";
    echo "  OG Title: " . ($sample->og_title ?: 'N/A') . "\n";
    echo "  Twitter Title: " . ($sample->twitter_title ?: 'N/A') . "\n";
    echo "  No Index: " . ($sample->no_index ? 'true' : 'false') . "\n";
    echo "  Active: " . ($sample->is_active ? 'true' : 'false') . "\n";
    echo "\n";
}

// 3. Th·ªëng k√™ s·ª≠ d·ª•ng c·ªôt
echo "üìä TH·ªêNG K√ä S·ª¨ D·ª§NG C·ªòT:\n";
echo str_repeat("-", 50) . "\n";

$stats = [
    'route_name' => PageSeo::whereNotNull('route_name')->count(),
    'url_pattern' => PageSeo::whereNotNull('url_pattern')->count(),
    'title' => PageSeo::whereNotNull('title')->count(),
    'title_i18n' => PageSeo::whereNotNull('title_i18n')->count(),
    'description' => PageSeo::whereNotNull('description')->count(),
    'description_i18n' => PageSeo::whereNotNull('description_i18n')->count(),
    'keywords' => PageSeo::whereNotNull('keywords')->count(),
    'keywords_i18n' => PageSeo::whereNotNull('keywords_i18n')->count(),
    'og_title' => PageSeo::whereNotNull('og_title')->count(),
    'og_title_i18n' => PageSeo::whereNotNull('og_title_i18n')->count(),
    'og_description' => PageSeo::whereNotNull('og_description')->count(),
    'og_description_i18n' => PageSeo::whereNotNull('og_description_i18n')->count(),
    'og_image' => PageSeo::whereNotNull('og_image')->count(),
    'twitter_title' => PageSeo::whereNotNull('twitter_title')->count(),
    'twitter_title_i18n' => PageSeo::whereNotNull('twitter_title_i18n')->count(),
    'twitter_description' => PageSeo::whereNotNull('twitter_description')->count(),
    'twitter_description_i18n' => PageSeo::whereNotNull('twitter_description_i18n')->count(),
    'twitter_image' => PageSeo::whereNotNull('twitter_image')->count(),
    'canonical_url' => PageSeo::whereNotNull('canonical_url')->count(),
    'extra_meta' => PageSeo::whereNotNull('extra_meta')->count(),
    'no_index_true' => PageSeo::where('no_index', true)->count(),
    'is_active_true' => PageSeo::where('is_active', true)->count(),
];

foreach ($stats as $field => $count) {
    $percentage = round(($count / $totalRecords) * 100, 1);
    echo sprintf("  %-25s %3d/%d (%s%%)\n", $field, $count, $totalRecords, $percentage);
}

// 4. Ph√¢n t√≠ch chu·∫©n SEO
echo "\nüéØ PH√ÇN T√çCH THEO CHU·∫®N SEO:\n";
echo str_repeat("-", 50) . "\n";

echo "üìã Chu·∫©n Google SEO:\n";
echo "  ‚úÖ Title tag: C√≥ (legacy + i18n)\n";
echo "  ‚úÖ Meta description: C√≥ (legacy + i18n)\n";
echo "  ‚úÖ Meta keywords: C√≥ (legacy + i18n)\n";
echo "  ‚úÖ Canonical URL: C√≥\n";
echo "  ‚úÖ Robots meta: C√≥ (no_index)\n";
echo "  ‚úÖ Open Graph: C√≥ (title, description, image)\n";
echo "  ‚úÖ Twitter Cards: C√≥ (title, description, image)\n";
echo "  ‚úÖ Multilingual: C√≥ (JSON i18n)\n";

echo "\nüìã Chu·∫©n Schema.org:\n";
echo "  ‚ùå Structured Data: Ch∆∞a c√≥ c·ªôt ri√™ng\n";
echo "  ‚ùå JSON-LD: Ch∆∞a c√≥ c·ªôt ri√™ng\n";
echo "  ‚ö†Ô∏è  C√≥ th·ªÉ d√πng extra_meta\n";

echo "\nüìã Chu·∫©n Technical SEO:\n";
echo "  ‚úÖ Hreflang: C√≥ th·ªÉ implement qua i18n\n";
echo "  ‚ùå Priority: Ch∆∞a c√≥ c·ªôt\n";
echo "  ‚ùå Sitemap inclusion: Ch∆∞a c√≥ c·ªôt\n";
echo "  ‚ùå Last modified: C√≥ updated_at\n";

// 5. ƒê√°nh gi√° thi·∫øu s√≥t
echo "\n‚ö†Ô∏è  C√ÅC C·ªòT C√ì TH·ªÇ B·ªî SUNG:\n";
echo str_repeat("-", 50) . "\n";

$missingColumns = [
    'priority' => 'M·ª©c ƒë·ªô ∆∞u ti√™n SEO (1-10)',
    'sitemap_include' => 'C√≥ ƒë∆∞a v√†o sitemap kh√¥ng',
    'sitemap_priority' => 'Priority trong sitemap (0.0-1.0)',
    'sitemap_changefreq' => 'T·∫ßn su·∫•t thay ƒë·ªïi (daily, weekly, etc)',
    'structured_data' => 'JSON-LD structured data',
    'hreflang' => 'Hreflang alternatives (JSON)',
    'breadcrumb_title' => 'Ti√™u ƒë·ªÅ breadcrumb',
    'breadcrumb_title_i18n' => 'Breadcrumb ƒëa ng√¥n ng·ªØ',
    'meta_author' => 'T√°c gi·∫£ meta tag',
    'meta_publisher' => 'Nh√† xu·∫•t b·∫£n',
    'article_type' => 'Lo·∫°i b√†i vi·∫øt (article, product, etc)',
    'focus_keyword' => 'T·ª´ kh√≥a ch√≠nh',
    'focus_keyword_i18n' => 'T·ª´ kh√≥a ch√≠nh ƒëa ng√¥n ng·ªØ',
];

foreach ($missingColumns as $column => $description) {
    echo "  ‚Ä¢ {$column}: {$description}\n";
}

// 6. ƒê√°nh gi√° c·ªôt d∆∞ th·ª´a
echo "\nüóëÔ∏è  C√ÅC C·ªòT C√ì TH·ªÇ D∆Ø TH·ª™A:\n";
echo str_repeat("-", 50) . "\n";

echo "  ‚Ä¢ title (legacy): C√≥ th·ªÉ thay b·∫±ng title_i18n\n";
echo "  ‚Ä¢ description (legacy): C√≥ th·ªÉ thay b·∫±ng description_i18n\n";
echo "  ‚Ä¢ keywords (legacy): C√≥ th·ªÉ thay b·∫±ng keywords_i18n\n";
echo "  ‚Ä¢ og_title (legacy): C√≥ th·ªÉ thay b·∫±ng og_title_i18n\n";
echo "  ‚Ä¢ og_description (legacy): C√≥ th·ªÉ thay b·∫±ng og_description_i18n\n";
echo "  ‚Ä¢ twitter_title (legacy): C√≥ th·ªÉ thay b·∫±ng twitter_title_i18n\n";
echo "  ‚Ä¢ twitter_description (legacy): C√≥ th·ªÉ thay b·∫±ng twitter_description_i18n\n";

echo "\n‚úÖ K·∫æT LU·∫¨N:\n";
echo str_repeat("-", 50) . "\n";
echo "1. C·∫•u tr√∫c b·∫£ng: T·ªët, ƒë√°p ·ª©ng chu·∫©n SEO c∆° b·∫£n\n";
echo "2. ƒêa ng√¥n ng·ªØ: Ho√†n thi·ªán v·ªõi JSON i18n\n";
echo "3. Open Graph & Twitter: ƒê·∫ßy ƒë·ªß\n";
echo "4. Technical SEO: C∆° b·∫£n, c√≥ th·ªÉ m·ªü r·ªông\n";
echo "5. Legacy columns: C√≥ th·ªÉ d·ªçn d·∫πp sau\n";
echo "6. C·∫ßn b·ªï sung: Priority, Sitemap, Structured Data\n";
echo "7. T·ªïng ƒë√°nh gi√°: 8/10 - R·∫•t t·ªët\n\n";
