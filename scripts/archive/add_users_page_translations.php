<?php

/**
 * Script ƒë·ªÉ th√™m t·∫•t c·∫£ translation keys c√≤n l·∫°i cho trang /users
 * T·ª± ƒë·ªông b·ªè qua n·∫øu key ƒë√£ t·ªìn t·∫°i
 *
 * Usage: php scripts/add_users_page_translations.php
 */

require_once __DIR__ . '/../vendor/autoload.php';

use Illuminate\Support\Facades\DB;
use Carbon\Carbon;

// Bootstrap Laravel application
$app = require_once __DIR__ . '/../bootstrap/app.php';
$app->make(Illuminate\Contracts\Console\Kernel::class)->bootstrap();

echo "üîß Script th√™m translation keys cho trang /users\n";
echo "===============================================\n\n";

// Danh s√°ch translation keys c·∫ßn th√™m
$translations = [
    // Page Structure
    [
        'key' => 'ui.users.page_title',
        'group_name' => 'ui',
        'vi' => 'Th√†nh vi√™n C·ªông ƒë·ªìng',
        'en' => 'Community Members'
    ],
    [
        'key' => 'ui.users.member_count',
        'group_name' => 'ui',
        'vi' => 'th√†nh vi√™n',
        'en' => 'members'
    ],

    // Navigation/Tabs
    [
        'key' => 'ui.users.all_members',
        'group_name' => 'ui',
        'vi' => 'T·∫•t c·∫£ th√†nh vi√™n',
        'en' => 'All Members'
    ],
    [
        'key' => 'ui.users.online_members',
        'group_name' => 'ui',
        'vi' => 'ƒêang tr·ª±c tuy·∫øn',
        'en' => 'Online'
    ],
    [
        'key' => 'ui.users.staff',
        'group_name' => 'ui',
        'vi' => 'Ban qu·∫£n tr·ªã',
        'en' => 'Staff'
    ],
    [
        'key' => 'ui.users.leaderboard',
        'group_name' => 'ui',
        'vi' => 'B·∫£ng x·∫øp h·∫°ng',
        'en' => 'Leaderboard'
    ],

    // Search & Filter
    [
        'key' => 'ui.users.search_profiles',
        'group_name' => 'ui',
        'vi' => 'T√¨m ki·∫øm h·ªì s∆°',
        'en' => 'Search Profiles'
    ],
    [
        'key' => 'ui.users.filter_by_role',
        'group_name' => 'ui',
        'vi' => 'L·ªçc theo vai tr√≤',
        'en' => 'Filter by Role'
    ],
    [
        'key' => 'ui.users.sort_by',
        'group_name' => 'ui',
        'vi' => 'S·∫Øp x·∫øp theo',
        'en' => 'Sort by'
    ],
    [
        'key' => 'ui.users.search',
        'group_name' => 'ui',
        'vi' => 'T√¨m ki·∫øm',
        'en' => 'Search'
    ],
    [
        'key' => 'ui.users.reset',
        'group_name' => 'ui',
        'vi' => 'ƒê·∫∑t l·∫°i',
        'en' => 'Reset'
    ],

    // Role Options
    [
        'key' => 'ui.users.all_roles',
        'group_name' => 'ui',
        'vi' => 'T·∫•t c·∫£ vai tr√≤',
        'en' => 'All Roles'
    ],
    [
        'key' => 'ui.users.all_admin',
        'group_name' => 'ui',
        'vi' => 'T·∫•t c·∫£ Admin',
        'en' => 'All Admin'
    ],
    [
        'key' => 'ui.users.all_moderator',
        'group_name' => 'ui',
        'vi' => 'T·∫•t c·∫£ Moderator',
        'en' => 'All Moderator'
    ],
    [
        'key' => 'ui.users.all_members_role',
        'group_name' => 'ui',
        'vi' => 'T·∫•t c·∫£ th√†nh vi√™n',
        'en' => 'All Members'
    ],
    [
        'key' => 'ui.users.all_partners',
        'group_name' => 'ui',
        'vi' => 'T·∫•t c·∫£ ƒë·ªëi t√°c',
        'en' => 'All Partners'
    ],

    // Sort Options
    [
        'key' => 'ui.users.newest',
        'group_name' => 'ui',
        'vi' => 'M·ªõi nh·∫•t',
        'en' => 'Newest'
    ],
    [
        'key' => 'ui.users.oldest',
        'group_name' => 'ui',
        'vi' => 'C≈© nh·∫•t',
        'en' => 'Oldest'
    ],
    [
        'key' => 'ui.users.by_name',
        'group_name' => 'ui',
        'vi' => 'Theo t√™n A-Z',
        'en' => 'By Name A-Z'
    ],
    [
        'key' => 'ui.users.by_posts',
        'group_name' => 'ui',
        'vi' => 'S·ªë b√†i vi·∫øt',
        'en' => 'Post Count'
    ],
    [
        'key' => 'ui.users.by_threads',
        'group_name' => 'ui',
        'vi' => 'S·ªë ch·ªß ƒë·ªÅ',
        'en' => 'Thread Count'
    ],

    // Sidebar Stats
    [
        'key' => 'ui.users.community_stats',
        'group_name' => 'ui',
        'vi' => 'Th·ªëng k√™ c·ªông ƒë·ªìng',
        'en' => 'Community Statistics'
    ],
    [
        'key' => 'ui.users.total_members',
        'group_name' => 'ui',
        'vi' => 'T·ªïng s·ªë th√†nh vi√™n:',
        'en' => 'Total Members:'
    ],
    [
        'key' => 'ui.users.newest_member',
        'group_name' => 'ui',
        'vi' => 'Th√†nh vi√™n m·ªõi nh·∫•t:',
        'en' => 'Newest Member:'
    ],
    [
        'key' => 'ui.users.online_count',
        'group_name' => 'ui',
        'vi' => 'ƒêang tr·ª±c tuy·∫øn:',
        'en' => 'Online:'
    ],
    [
        'key' => 'ui.users.top_contributors',
        'group_name' => 'ui',
        'vi' => 'Top ƒë√≥ng g√≥p th√°ng n√†y',
        'en' => 'Top Contributors This Month'
    ],
    [
        'key' => 'ui.users.view_leaderboard',
        'group_name' => 'ui',
        'vi' => 'Xem b·∫£ng x·∫øp h·∫°ng',
        'en' => 'View Leaderboard'
    ],
    [
        'key' => 'ui.users.staff_members',
        'group_name' => 'ui',
        'vi' => 'Ban qu·∫£n tr·ªã',
        'en' => 'Staff Members'
    ],
    [
        'key' => 'ui.users.view_all',
        'group_name' => 'ui',
        'vi' => 'Xem t·∫•t c·∫£',
        'en' => 'View All'
    ],

    // Additional keys
    [
        'key' => 'ui.users.community_members_group',
        'group_name' => 'ui',
        'vi' => 'Th√†nh vi√™n c·ªông ƒë·ªìng',
        'en' => 'Community Members'
    ],
    [
        'key' => 'ui.users.no_members_found',
        'group_name' => 'ui',
        'vi' => 'Kh√¥ng t√¨m th·∫•y th√†nh vi√™n n√†o',
        'en' => 'No members found'
    ],
    [
        'key' => 'ui.users.try_different_filters',
        'group_name' => 'ui',
        'vi' => 'Th·ª≠ thay ƒë·ªïi b·ªô l·ªçc ho·∫∑c t·ª´ kh√≥a t√¨m ki·∫øm.',
        'en' => 'Try changing filters or search keywords.'
    ],

    // Role Group Labels
    [
        'key' => 'ui.users.system_management_group',
        'group_name' => 'ui',
        'vi' => 'Qu·∫£n l√Ω h·ªá th·ªëng',
        'en' => 'System Management'
    ],
    [
        'key' => 'ui.users.community_management_group',
        'group_name' => 'ui',
        'vi' => 'Qu·∫£n l√Ω c·ªông ƒë·ªìng',
        'en' => 'Community Management'
    ],
    [
        'key' => 'ui.users.business_partners_group',
        'group_name' => 'ui',
        'vi' => 'ƒê·ªëi t√°c kinh doanh',
        'en' => 'Business Partners'
    ],
];

try {
    $now = Carbon::now();
    $totalAdded = 0;
    $totalSkipped = 0;

    echo "üìù B·∫Øt ƒë·∫ßu x·ª≠ l√Ω " . count($translations) . " translation keys...\n\n";

    foreach ($translations as $index => $translation) {
        $key = $translation['key'];
        $groupName = $translation['group_name'];
        $viContent = $translation['vi'];
        $enContent = $translation['en'];

        echo "üîç [" . ($index + 1) . "/" . count($translations) . "] X·ª≠ l√Ω key: {$key}\n";

        $addedForThisKey = 0;

        // Ki·ªÉm tra v√† th√™m Vietnamese translation
        $existingVi = DB::table('translations')
            ->where('key', $key)
            ->where('locale', 'vi')
            ->first();

        if (!$existingVi) {
            DB::table('translations')->insert([
                'key' => $key,
                'locale' => 'vi',
                'content' => $viContent,
                'group_name' => $groupName,
                'namespace' => null,
                'is_active' => 1,
                'created_by' => null,
                'updated_by' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ]);
            echo "   ‚úÖ Th√™m VI: '{$viContent}'\n";
            $addedForThisKey++;
        } else {
            echo "   ‚è≠Ô∏è  VI ƒë√£ t·ªìn t·∫°i: '{$existingVi->content}'\n";
        }

        // Ki·ªÉm tra v√† th√™m English translation
        $existingEn = DB::table('translations')
            ->where('key', $key)
            ->where('locale', 'en')
            ->first();

        if (!$existingEn) {
            DB::table('translations')->insert([
                'key' => $key,
                'locale' => 'en',
                'content' => $enContent,
                'group_name' => $groupName,
                'namespace' => null,
                'is_active' => 1,
                'created_by' => null,
                'updated_by' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ]);
            echo "   ‚úÖ Th√™m EN: '{$enContent}'\n";
            $addedForThisKey++;
        } else {
            echo "   ‚è≠Ô∏è  EN ƒë√£ t·ªìn t·∫°i: '{$existingEn->content}'\n";
        }

        if ($addedForThisKey > 0) {
            $totalAdded += $addedForThisKey;
        } else {
            $totalSkipped++;
        }

        echo "\n";
    }

    // T·ªïng k·∫øt
    echo "üéâ Ho√†n th√†nh!\n";
    echo "üìä Th·ªëng k√™:\n";
    echo "   - T·ªïng s·ªë keys x·ª≠ l√Ω: " . count($translations) . "\n";
    echo "   - Translations ƒë√£ th√™m: {$totalAdded}\n";
    echo "   - Keys ƒë√£ t·ªìn t·∫°i (b·ªè qua): {$totalSkipped}\n";

    if ($totalAdded > 0) {
        echo "\nüí° L∆∞u √Ω: Cache s·∫Ω ƒë∆∞·ª£c clear t·ª± ƒë·ªông khi s·ª≠ d·ª•ng translation.\n";
    }

    // Hi·ªÉn th·ªã th·ªëng k√™ theo group
    echo "\nüìà Th·ªëng k√™ translations trong group 'ui':\n";
    $groupStats = DB::table('translations')
        ->selectRaw('locale, COUNT(*) as count')
        ->where('group_name', 'ui')
        ->groupBy('locale')
        ->orderBy('locale')
        ->get();

    foreach ($groupStats as $stat) {
        echo "   - {$stat->locale}: {$stat->count} keys\n";
    }

} catch (Exception $e) {
    echo "‚ùå L·ªói: " . $e->getMessage() . "\n";
    echo "üìç File: " . $e->getFile() . " (line " . $e->getLine() . ")\n";
    exit(1);
}

echo "\n‚ú® Script ho√†n th√†nh!\n";
