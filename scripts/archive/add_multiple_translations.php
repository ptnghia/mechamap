<?php

/**
 * Script ƒë·ªÉ th√™m nhi·ªÅu translation keys v√†o database c√πng l√∫c
 * T·ª± ƒë·ªông b·ªè qua n·∫øu key ƒë√£ t·ªìn t·∫°i
 * 
 * Usage: php scripts/add_multiple_translations.php
 */

require_once __DIR__ . '/../vendor/autoload.php';

use Illuminate\Support\Facades\DB;
use Carbon\Carbon;

// Bootstrap Laravel application
$app = require_once __DIR__ . '/../bootstrap/app.php';
$app->make(Illuminate\Contracts\Console\Kernel::class)->bootstrap();

echo "üîß Script th√™m nhi·ªÅu translation keys\n";
echo "=====================================\n\n";

// Danh s√°ch translation keys c·∫ßn th√™m
$translations = [
    [
        'key' => 'ui.users.online',
        'group_name' => 'ui',
        'vi' => 'Tr·ª±c tuy·∫øn',
        'en' => 'Online'
    ],
    [
        'key' => 'ui.users.offline',
        'group_name' => 'ui', 
        'vi' => 'Ngo·∫°i tuy·∫øn',
        'en' => 'Offline'
    ],
    [
        'key' => 'ui.users.posts',
        'group_name' => 'ui',
        'vi' => 'b√†i vi·∫øt',
        'en' => 'posts'
    ],
    [
        'key' => 'ui.users.threads',
        'group_name' => 'ui',
        'vi' => 'ch·ªß ƒë·ªÅ',
        'en' => 'threads'
    ],
    [
        'key' => 'ui.users.followers',
        'group_name' => 'ui',
        'vi' => 'theo d√µi',
        'en' => 'followers'
    ],
    [
        'key' => 'ui.users.follow',
        'group_name' => 'ui',
        'vi' => 'Theo d√µi',
        'en' => 'Follow'
    ],
    [
        'key' => 'ui.users.unfollow',
        'group_name' => 'ui',
        'vi' => 'B·ªè theo d√µi',
        'en' => 'Unfollow'
    ],
    [
        'key' => 'ui.users.joined',
        'group_name' => 'ui',
        'vi' => 'Tham gia',
        'en' => 'Joined'
    ],
    // Th√™m c√°c keys kh√°c n·∫øu c·∫ßn...
];

try {
    $now = Carbon::now();
    $totalAdded = 0;
    $totalSkipped = 0;
    
    echo "üìù B·∫Øt ƒë·∫ßu x·ª≠ l√Ω " . count($translations) . " translation keys...\n\n";
    
    foreach ($translations as $index => $translation) {
        $key = $translation['key'];
        $groupName = $translation['group_name'];
        $viContent = $translation['vi'];
        $enContent = $translation['en'];
        
        echo "üîç [" . ($index + 1) . "/" . count($translations) . "] X·ª≠ l√Ω key: {$key}\n";
        
        $addedForThisKey = 0;
        
        // Ki·ªÉm tra v√† th√™m Vietnamese translation
        $existingVi = DB::table('translations')
            ->where('key', $key)
            ->where('locale', 'vi')
            ->first();
            
        if (!$existingVi) {
            DB::table('translations')->insert([
                'key' => $key,
                'locale' => 'vi',
                'content' => $viContent,
                'group_name' => $groupName,
                'namespace' => null,
                'is_active' => 1,
                'created_by' => null,
                'updated_by' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ]);
            echo "   ‚úÖ Th√™m VI: '{$viContent}'\n";
            $addedForThisKey++;
        } else {
            echo "   ‚è≠Ô∏è  VI ƒë√£ t·ªìn t·∫°i: '{$existingVi->content}'\n";
        }
        
        // Ki·ªÉm tra v√† th√™m English translation
        $existingEn = DB::table('translations')
            ->where('key', $key)
            ->where('locale', 'en')
            ->first();
            
        if (!$existingEn) {
            DB::table('translations')->insert([
                'key' => $key,
                'locale' => 'en',
                'content' => $enContent,
                'group_name' => $groupName,
                'namespace' => null,
                'is_active' => 1,
                'created_by' => null,
                'updated_by' => null,
                'created_at' => $now,
                'updated_at' => $now,
            ]);
            echo "   ‚úÖ Th√™m EN: '{$enContent}'\n";
            $addedForThisKey++;
        } else {
            echo "   ‚è≠Ô∏è  EN ƒë√£ t·ªìn t·∫°i: '{$existingEn->content}'\n";
        }
        
        if ($addedForThisKey > 0) {
            $totalAdded += $addedForThisKey;
        } else {
            $totalSkipped++;
        }
        
        echo "\n";
    }
    
    // T·ªïng k·∫øt
    echo "üéâ Ho√†n th√†nh!\n";
    echo "üìä Th·ªëng k√™:\n";
    echo "   - T·ªïng s·ªë keys x·ª≠ l√Ω: " . count($translations) . "\n";
    echo "   - Translations ƒë√£ th√™m: {$totalAdded}\n";
    echo "   - Keys ƒë√£ t·ªìn t·∫°i (b·ªè qua): {$totalSkipped}\n";
    
    if ($totalAdded > 0) {
        echo "\nüí° L∆∞u √Ω: Cache s·∫Ω ƒë∆∞·ª£c clear t·ª± ƒë·ªông khi s·ª≠ d·ª•ng translation.\n";
    }
    
    // Hi·ªÉn th·ªã th·ªëng k√™ theo group
    echo "\nüìà Th·ªëng k√™ translations theo group:\n";
    $groupStats = DB::table('translations')
        ->selectRaw('group_name, locale, COUNT(*) as count')
        ->whereIn('group_name', array_unique(array_column($translations, 'group_name')))
        ->groupBy('group_name', 'locale')
        ->orderBy('group_name')
        ->orderBy('locale')
        ->get();
        
    $currentGroup = null;
    foreach ($groupStats as $stat) {
        if ($currentGroup !== $stat->group_name) {
            echo "   üìÅ {$stat->group_name}:\n";
            $currentGroup = $stat->group_name;
        }
        echo "      - {$stat->locale}: {$stat->count} keys\n";
    }
    
} catch (Exception $e) {
    echo "‚ùå L·ªói: " . $e->getMessage() . "\n";
    echo "üìç File: " . $e->getFile() . " (line " . $e->getLine() . ")\n";
    exit(1);
}

echo "\n‚ú® Script ho√†n th√†nh!\n";
