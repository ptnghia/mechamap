# =============================================================================
# MechaMap Nginx Configuration for Shared Hosting
# SSL certificates are managed by hosting provider
# =============================================================================

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name mechamap.com www.mechamap.com;
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server block
server {
    listen 443 ssl http2;
    server_name mechamap.com www.mechamap.com;
    root /var/www/mechamap/public;
    index index.php index.html;

    # SSL Configuration - Managed by hosting provider
    # No need to specify ssl_certificate and ssl_certificate_key
    # Hosting provider handles SSL certificates automatically

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Laravel Configuration
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP Processing
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_hide_header X-Powered-By;
    }

    # Hide sensitive files
    location ~ /\.(?!well-known).* {
        deny all;
    }

    # Deny access to sensitive Laravel files
    location ~ ^/(\.env|\.git|composer\.(json|lock)|package\.(json|lock)|artisan|storage/logs) {
        deny all;
    }

    # Asset optimization and caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Enable gzip compression for assets
        gzip on;
        gzip_vary on;
        gzip_types
            text/css
            text/javascript
            text/xml
            text/plain
            application/javascript
            application/xml+rss
            application/json
            image/svg+xml;
    }

    # Handle Laravel storage files
    location /storage {
        alias /var/www/mechamap/storage/app/public;
        expires 1y;
        add_header Cache-Control "public";
    }

    # Robots.txt
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # Error pages
    error_page 404 /index.php;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /var/www/html;
    }

    # Logging
    access_log /var/log/nginx/mechamap_access.log;
    error_log /var/log/nginx/mechamap_error.log;

    # Performance optimizations
    client_max_body_size 20M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 65s;
    send_timeout 60s;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
}

# Optional: Realtime server subdomain (if using separate subdomain)
# server {
#     listen 443 ssl http2;
#     server_name realtime.mechamap.com;
#     
#     # SSL managed by hosting provider
#     
#     location / {
#         proxy_pass http://localhost:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }
# }
